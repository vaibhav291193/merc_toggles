@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");
body{
  margin: 0;
  padding: 0;
}
.ds-container {
  margin: 0 auto;
  border: 1px solid #ccc;
  padding: 20px;
}
.example-container {
  margin: 0 auto;
  padding: 10px;
  width: 90%;
}
h1 {
  font-family: Roboto;
  font-size: 32px;
}
h2 {
  font-family: Roboto;
  font-size: 28px;
}

h3 {
  font-family: Roboto;
  font-size: 24px;
}
/* Button Class */
*,
*:before,
*:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

/* 
Do not delete the following comment. It is essential for tracking purposes.
#Merc2021DoNotDelete 
*/

/* containing label */
.toggleText{
    margin-left: 0px !important;
    min-height: 32px;
    height: auto;
    
    line-height: 24px;
    padding-top: 4px;
  }

.switch-toggle {
	background: none;
  border: none;
  height: auto;
  padding: 0;

  position: relative;
	display: flex;
  justify-content: space-between;
  align-items: center;

  font-family: Roboto;
  font-size: 1rem;
  font-weight: 500;
  font-stretch: normal;
  font-style: normal;
  line-height: 1.5;
  letter-spacing: 0.5px;
  color: #333333;
  cursor: pointer;
  text-align: left;
}

.switch-toggle:hover {
	box-shadow: none;
}

.switch-toggle:focus {
	outline: none;
}

/* negate 'flash' of text color when pressing a button in some browsers */
.switch-toggle:active {
	color: inherit;
}

/* using the before/after pseudo elements of the span to create the "switch" */
.switch-toggle__ui:before,
.switch-toggle__ui:after {
	content: "";
	position: absolute;
	/* top: 50%;
	transform: translateY(-50%); */
  top: 0%;
  transform: translateY(-0%);
}

/* styling specific to the knob of the switch */
.switch-toggle__ui:after {
	background: #fff;
	border-radius: 100%;
	right: 4px;
  top: 4px;
	transition: right .1825s ease-in-out;
	width: 24px;
  height: 24px;

  /* top: 50%;
  transform: translateY(-50%); */
}

/* styling specific to the knob "container" */
.switch-toggle__ui:before {
	background: #888888;
	border-radius: 1.75em;
	right: 0px;
	transition: background .2s ease-in-out;
	
  width: 56px;
  height: 32px;
}

.switch-toggle:hover .switch-toggle__ui:before {
	background: #666666;
}

.switch-toggle span {
	pointer-events: none;
  margin-left: 80px;
}


/* Focus State */
.switch-toggle--labels[aria-pressed="false"]:focus .switch-toggle__ui:after,
.switch-toggle.by-keyboard:focus .switch-toggle__ui:before {
  box-shadow: 0 0 0 0px #fff, 0 0 0 0px #0467c6 !important;
}
.switch-toggle[aria-pressed="true"]:focus .switch-toggle__ui:before {
	box-shadow: 0 0 0 2px #fff, 0 0 0 4px #0467c6;
  background: #004990;
}
.switch-toggle:focus .switch-toggle__ui:before {
  box-shadow: 0 0 0 2px #fff, 0 0 0 4px #0467c6;
  background: #666666;
}
/* END Focus State */

/* change the position of the knob to indicate it has been checked*/
.switch-toggle[aria-pressed="true"] .switch-toggle__ui:after {
	background-image: 
        url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" viewBox="0 0 12 10"> <g fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"> <g stroke="%230467C6" stroke-width="2"> <g> <g> <g> <path d="M7.5 13.283L10.711 16 16.5 8" transform="translate(-928.000000, -1153.000000) translate(777.000000, 1142.000000) translate(117.000000, 0.000000) translate(28.000000, 4.000000)"/> </g> </g> </g> </g> </g> </svg>');
  background-repeat: no-repeat;
  background-position: center;
}

.switch-toggle[aria-pressed="true"]:focus .switch-toggle__ui:after,
.switch-toggle[aria-pressed="true"]:hover .switch-toggle__ui:after {
  background-image: 
        url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" viewBox="0 0 12 10"> <g fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"> <g stroke="%23004990" stroke-width="2"> <g> <g> <g> <path d="M7.5 13.283L10.711 16 16.5 8" transform="translate(-928.000000, -1153.000000) translate(777.000000, 1142.000000) translate(117.000000, 0.000000) translate(28.000000, 4.000000)"/> </g> </g> </g> </g> </g> </svg>');
}

.switch-toggle[aria-pressed="true"].by-keyboard .switch-toggle__ui:after {
	background-image: 
        url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" viewBox="0 0 12 10"> <g fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"> <g stroke="%230467C6" stroke-width="2"> <g> <g> <g> <path d="M7.5 13.283L10.711 16 16.5 8" transform="translate(-928.000000, -1153.000000) translate(777.000000, 1142.000000) translate(117.000000, 0.000000) translate(28.000000, 4.000000)"/> </g> </g> </g> </g> </g> </svg>');
  background-repeat: no-repeat;
  background-position: center;
}

.switch-toggle[aria-pressed="true"].by-keyboard:hover .switch-toggle__ui:after {
  background-image: 
        url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="12" height="10" viewBox="0 0 12 10"> <g fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round"> <g stroke="%23004990" stroke-width="2"> <g> <g> <g> <path d="M7.5 13.283L10.711 16 16.5 8" transform="translate(-928.000000, -1153.000000) translate(777.000000, 1142.000000) translate(117.000000, 0.000000) translate(28.000000, 4.000000)"/> </g> </g> </g> </g> </g> </svg>');
}

/* update the color of the "container" to further visually indicate state */
.switch-toggle[aria-pressed="true"].by-keyboard .switch-toggle__ui:before {
	background: #0467c6;
}
.switch-toggle[aria-pressed="true"].by-keyboard:hover .switch-toggle__ui:before {
	background: #004990;
}
.switch-toggle[aria-pressed="false"].by-keyboard .switch-toggle__ui:before {
	background: #888888;
}
.switch-toggle[aria-pressed="false"].by-keyboard:hover .switch-toggle__ui:before {
	background: #666666;
}

/**
 * Toggle switch modifications for displaying On/Off labels
 */
.switch-toggle--labels span:before {
	content: "";
}

.switch-toggle--labels[aria-pressed="false"] span:after {
	right: 28px;
}

.switch-toggle--labels[aria-pressed="true"] span:before {
	content: "";
}

@media screen and (-ms-high-contrast: active) {
	.switch-toggle__ui:after {
		background-color: windowText;
	}
}
